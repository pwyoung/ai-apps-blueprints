#!/usr/bin/env bash

# Exit on error
set -e

# Location of this script
MY_DIR=$(cd "$(dirname "$0")"; pwd -P)

show_usage()
{
    printf "Usage: $0 <command>\n"
    cat <<EOF
    -c|--clean
    -b|--build
    -t|--test
    -h|--help

    Example:
      $0 -C -b -t
EOF
    exit 0
}

if [[ $# -lt 1 ]]; then
    show_usage "$@"
fi

clean() {
    echo "Clean"
}

build() {
    echo "Build"

    # Show the cluster
    kubectl get nodes -o wide
    read -p "If this is the cluster to deploy to, hit enter, otherwise hit ctrl-c"

    DEPLOYMENT='mpi-operator'
    N=$(kubectl get deployment -n $DEPLOYMENT | grep -v NAME | wc -l)
    if [ $N -gt 0 ]; then
        echo "It looks like the deployment is running already"
    else
        VER='v0.4.0'
        URL="https://raw.githubusercontent.com/kubeflow/mpi-operator/${VER}/deploy/v2beta1/mpi-operator.yaml"
        kubectl apply -f $URL
    fi
}

run_test() {
    echo "Test"
    kubectl get crd | grep 'mpijobs.kubeflow.org'

    kubectl get all -n mpi-operator
}


################################################################################

while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -c|--clean)
        shift
        clean
        ;;
    -b|--build)
        shift
        build
        ;;
    -t|--test)
        shift
        run_test
        ;;
    -h|--help)
        show_usage
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done
