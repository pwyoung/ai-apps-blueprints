#!/usr/bin/env bash

# Exit on error
set -e

# Show debug info
#set -x
# You can also get debug info by using something like
#   "bash -x ./run"

# Location of this script
MY_DIR=$(cd "$(dirname "$0")"; pwd -P)

show_usage()
{
    printf "Usage: $0 <command>\n"
    cat <<EOF
    -c|--clean
    -b|--build
    -t|--test
    -h|--help

    Example:
      $0 -C -b -t
EOF
    exit 0
}

if [[ $# -lt 1 ]]; then
    show_usage "$@"
fi

clean() {
    echo "Clean"


    rm -rf ./outputs/*
    rm -f ./index*.html

}

build() {
    echo "Build"

    # Manually install Python packages
    #pip install hydra-core --upgrade
    # Or just use a requirements file
    pip install -r ${MY_DIR}/requirements.txt

    # Example, for posterity
    #SCRIPTS=("setup_pip" "setup_cuda" "setup_cudnn" "setup_ffmpeg" "setup_pytorch" "setup_tensorrt" "setup_apex" "setup_nemo" "setup_megatron")
    #for i in ${SCRIPTS[@]}; do
    #    echo "Running $i"
    #    ${MY_DIR}/setup/$i
    #done
}

run_test() {
    # cd ${MY_DIR}/scripts
    time python3 ./my_app.py
}


################################################################################

while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -c|--clean)
        shift
        clean
        ;;
    -b|--build)
        shift
        build
        ;;
    -t|--test)
        shift
        run_test
        ;;
    -h|--help)
        show_usage
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done
